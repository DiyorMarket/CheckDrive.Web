@model IEnumerable<CheckDrive.ApiContracts.DispatcherReview.DispatcherReviewDto>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/css/LogOutButtun.css" asp-append-version="true" />
@{
    ViewData["Title"] = "PersonalIndex";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
    string activeTab = "PersonalIndex";
}
<div class="container-fluid py-2 px-4 d-flex justify-content-end">
    <div class="d-flex align-items-center">
        <button class="logout-btn" type="button" onclick="window.location.href='@Url.Action("Login", "Auth")'">
            <span class="logout-icon">
                <i class="fas fa-sign-out-alt"></i>
            </span>
            Chiqish
        </button>
    </div>
</div>

<div class="container mt-5" style="max-width: 100%;">
    <div class="mb-4 d-flex justify-content-between align-items-center">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link @(activeTab == "PersonalIndex" ? "active" : "")" href="@Url.Action("PersonalIndex", "DispatcherReviews")">Asosiy sahifa</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(activeTab == "HistoryIndexForPersonalPage" ? "active" : "")" href="@Url.Action("HistoryIndexForPersonalPage", "DispatcherReviews")">Tarixni ko'rish</a>
            </li>
        </ul>
        <div class="gap-2">
            <a class="btn btn-primary" href="@Url.Action("CarHistoryIndex", "Cars")">Moshina tarixi</a>
            <!-- Dropdown Menu for File Download -->
            <div class="dropdown d-inline-block">
                <button class="btn btn-outline-info dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fa-solid fa-download"></i> Yuklab olish
                </button>
                <div class="dropdown-menu p-3" id="dropdownMenu" aria-labelledby="dropdownMenuButton" data-bs-auto-close="outside">
                    <ejs-calendar id="calendar" change="valueChange" Start="Year" Depth="Year"></ejs-calendar>
                    <a class="dropdown-item mt-2 btn btn-info" href="#" id="downloadButton">Yuklash</a>
                </div>
            </div>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered table-striped table-hover paper-shadow" style="width: 100%;">
            <thead>
                <tr>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Haydovchi F.I.</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Moshina</th>
                    <th class="text-center vertical-align-middle" style="min-width: 200px;">Yoqilg`i meyori</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Boshlang`ich yoqilg`i qoldig`i</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Boshlang`ich masofa</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Yakuniy masofa</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Masofa</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Sarflagan yoqilg`i</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Quyilgan yoqilg`i</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Qolgan yoqilg`i qoldig`i</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Operator F.I.</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Mexanik F.I.</th>
                    <th class="text-center vertical-align-middle" style="min-width: 150px;">Sana</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var review in Model)
                    {
                        <tr>
                            <td class="text-center vertical-align-middle">@review.DriverName</td>
                            <td class="text-center vertical-align-middle">@review.CarName</td>
                            <td class="text-center vertical-align-middle">@review.CarMeduimFuelConsumption</td>
                            <td class="text-center vertical-align-middle">@review.RemainigFuelBefore</td>
                            <td class="text-center vertical-align-middle">@review.InitialDistance</td>
                            <td class="text-center vertical-align-middle">@review.FinalDistance</td>
                            <td class="text-center vertical-align-middle">
                                @if (review.DispatcherId != 0)
                                {
                                    @review.DistanceCovered
                                }
                                else
                                {
                                    <a href="@Url.Action("Create", new {distanceCovered = review.DistanceCovered, fuelSpended = review.FuelSpended, operatorId = review.OperatorId, mechanicId = review.MechanicId, driverId = review.DriverId, mechanicHandoverId = review.MechanicHandoverId, mechanicAcceptanceId = review.MechanicAcceptanceId, carId = review.CarId, operatorReviewId = review.OperatorReviewId })">
                                        @review.DistanceCovered
                                    </a>
                                }
                            </td>
                            <td class="text-center vertical-align-middle">
                                @if (review.DispatcherId != 0)
                                {
                                    @String.Format("{0:F4}", review.FuelSpended)
                                }
                                else
                                {
                                    <a href="@Url.Action("Create", new {distanceCovered = review.DistanceCovered, fuelSpended = review.FuelSpended, operatorId = review.OperatorId, mechanicId = review.MechanicId, driverId = review.DriverId, mechanicHandoverId = review.MechanicHandoverId, mechanicAcceptanceId = review.MechanicAcceptanceId, carId = review.CarId, operatorReviewId = review.OperatorReviewId })">
                                        @String.Format("{0:F3}", review.FuelSpended)
                                    </a>
                                }
                            </td>
                            <td class="text-center vertical-align-middle">@review.PouredFuel</td>
                            <td class="text-center vertical-align-middle">@String.Format("{0:F3}", review.RemainigFuelAfter)</td>
                            <td class="text-center vertical-align-middle">@review.OperatorName</td>
                            <td class="text-center vertical-align-middle">@review.MechanicName</td>
                            <td class="text-center vertical-align-middle">@review.Date</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="14" class="text-center">
                            Maʼlumotlar mavjud emas
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center my-2">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (ViewBag.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PersonalIndex", new { pageNumber = 1 })" aria-label="First">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PersonalIndex", new { pageNumber = ViewBag.CurrentPage - 1 })">@(@ViewBag.CurrentPage - 1)</a>
                        </li>
                    }
                    @if (ViewBag.HasNextPage)
                    {
                        <li class="page-item active">
                            <span class="page-link">@ViewBag.CurrentPage</span>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PersonalIndex", new { pageNumber = ViewBag.CurrentPage + 1 })">@(@ViewBag.CurrentPage + 1)</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PersonalIndex", new { pageNumber = ViewBag.PageCount })" aria-label="Last">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
            <div class="p-2">
                <p class="h6 mb-0">@ViewBag.PageCount sahifadan @ViewBag.CurrentPage tasi  ( umumiy ishchilar soni: @ViewBag.TotalCount)</p>
            </div>
        </div>
    </div>
</div>

<style>
    .nav-tabs .nav-link.active {
        background-color: #007bff;
        color: white;
    }

    .nav-tabs .nav-link {
        border: 1px solid #dee2e6;
    }
    .badge {
        font-size: 0.8rem;
        padding: 5px 10px;
        border-radius: 5px;
    }

    .bg-success {
        background-color: #28a745;
    }

    .bg-danger {
        background-color: #dc3545;
    }

    .bg-secondary {
        background-color: #6c757d;
    }

    .container {
        margin-top: 30px;
        max-width: 100%;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

        .table-bordered th,
        .table-bordered td {
            border: 1px solid #dee2e6;
        }

    .paper-shadow {
        background: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
    }

    .pagination {
        justify-content: flex-end;
    }

    .shadow {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .pagination .page-link {
        margin-left: 5px;
    }

    .pagination .page-item.shadow {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .vertical-align-middle {
        vertical-align: middle !important;
    }
</style>

<script>
    // Default selected year and month
    let selectedYear = new Date().getFullYear(); // Current year
    let selectedMonth = new Date().getMonth() + 1; // Current month (months are zero-based)

    // Function to handle the change event in the calendar
    function valueChange(args) {
        var selectedDate = args.value;
        selectedYear = selectedDate.getFullYear();
        selectedMonth = selectedDate.getMonth() + 1; // Months are zero-based

        // Optionally, update a label to display the selected date (if you have one)
        document.getElementById('date_label').textContent = 'Выбранное значение: ' + selectedDate.toDateString();
    }

    // Prevent the dropdown from closing when clicking inside
    document.getElementById('dropdownMenu').addEventListener('click', function (event) {
        event.stopPropagation(); // Stops the dropdown from closing when interacting with its contents
    });

    // Handle the download button click
    document.getElementById('downloadButton').addEventListener('click', function (e) {
        e.preventDefault(); // Prevent the default action of the link

        // Construct the download URL using the selected year and month
        const url = `/DispatcherReviews/Download?year=${selectedYear}&month=${selectedMonth}`;

        // Create a temporary link to trigger the download
        const link = document.createElement('a');
        link.href = url;
        link.setAttribute('download', ''); // Add download attribute to force download
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link); // Clean up

        // Manually close the dropdown after downloading
        const dropdown = bootstrap.Dropdown.getInstance(document.getElementById('dropdownMenuButton'));
        dropdown.hide();
    });
</script>