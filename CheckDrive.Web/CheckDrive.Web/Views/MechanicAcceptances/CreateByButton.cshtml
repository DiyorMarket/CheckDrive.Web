@model CheckDrive.ApiContracts.MechanicAcceptance.MechanicAcceptanceForCreateDto

@{
    ViewData["Title"] = "CreateByButton";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
    bool noDriversAvailable = ViewBag.FilteredOperatorResponse == null || !((IEnumerable<dynamic>)ViewBag.FilteredOperatorResponse).Any();
}

<div class="row mt-custom">
    <div class="col-md-4 offset-md-1 mt-5">
        <h4>Ro'yxatga olish</h4>
        <hr class="w-50" />

        @if (noDriversAvailable)
        {
            <div class="alert alert-warning">
                <strong>Diqqat!</strong> Hozirda mavjud haydovchilar yo'q. Iltimos, keyinroq qayta urinib ko'ring.
            </div>
        }

        <form asp-action="Create" method="post" id="createFormByButton">
            <fieldset @(noDriversAvailable ? "disabled" : "")>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group w-50 mt-2">
                    <label asp-for="DriverId" class="control-label mt-2">Haydovchi</label>
                    <select asp-for="DriverId" class="form-control border border-dark" id="driverSelect">
                        @if (noDriversAvailable)
                        {
                            <option value="">Haydovchilar mavjud emas</option>
                        }
                        else
                        {
                            <option value="">Haydovchini tanlang</option>
                            @foreach (var driver in ViewBag.FilteredOperatorResponse)
                            {
                                <option value="@driver.DriverId" data-carid="@driver.CarId" data-carname="@driver.CarModel (@driver.CarNumber)" data-mileage="@driver.CarMileage">@driver.DriverName</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group w-50">
                    <input type="hidden" asp-for="MechanicId" class="form-control border border-dark" value="@ViewBag.MechanicId" />
                </div>
                <div class="form-group w-50 mt-2">
                    <label asp-for="CarId" class="control-label mt-2">Mashina</label>
                    <select asp-for="CarId" class="form-control border border-dark" id="carSelect"></select>
                </div>
                <div class="form-group w-50 mt-2">
                    <label asp-for="Distance" class="control-label mt-2">Qabul qilish masofasi</label>
                    <input asp-for="Distance" class="form-control" type="number" min="0" step="1" />
                    <span asp-validation-for="Distance" class="text-danger"></span>
                    <!-- Placeholder for validation message -->
                    <span class="distance-validation-message text-danger"></span>
                </div>
                <div class="form-group w-50 mt-2">
                    <label asp-for="Comments" class="control-label mt-2">Izoh</label>
                    <textarea asp-for="Comments" class="form-control" rows="4"></textarea>
                </div>
                <div class="form-check form-switch mt-3">
                    <input asp-for="IsAccepted" class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                    <label asp-for="IsAccepted" class="form-check-label" for="flexSwitchCheckDefault">Soz?</label>
                </div>
                <div class="form-group mt-3 w-50 mt-2">
                    <a asp-action="PersonalIndex" class="btn btn-info">
                        <i class="fa-solid fa-arrow-left-long"></i> Orqaga
                    </a>
                    <button id="createButton" class="btn btn-success" type="submit">
                        <i class="fa fa-plus"></i> Yaratish
                    </button>
                </div>
            </fieldset>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var driverSelect = document.getElementById('driverSelect');
            var carSelect = document.getElementById('carSelect');
            var distanceInput = document.querySelector('input[name="Distance"]');
            var createButton = document.getElementById('createButton');
            var mileage = 0;

            driverSelect.addEventListener('change', function () {
                var selectedOption = driverSelect.options[driverSelect.selectedIndex];
                var carId = selectedOption.getAttribute('data-carid');
                var carName = selectedOption.getAttribute('data-carname');
                mileage = parseInt(selectedOption.getAttribute('data-mileage'));

                carSelect.innerHTML = '';

                if (carId && carName) {
                    var option = document.createElement('option');
                    option.value = carId;
                    option.textContent = carName;
                    carSelect.appendChild(option);
                }

                carSelect.disabled = false;
                validateDistance();
            });

            distanceInput.addEventListener('input', function () {
                validateDistance();
            });

            function validateDistance() {
                var distance = Number(distanceInput.value);
                if (distance < mileage) {
                    distanceInput.classList.add('is-invalid');
                    showValidationMessage(`Qabul qilish masofasi avtomobilning oxirgi kiritilgan masofasidan ${mileage} km kam bo'lishi mumkin emas!`);
                    createButton.disabled = true;
                } else {
                    distanceInput.classList.remove('is-invalid');
                    clearValidationMessage();
                    createButton.disabled = false;
                }
            }

            function showValidationMessage(message) {
                var errorSpan = document.querySelector('.distance-validation-message');
                if (!errorSpan) {
                    errorSpan = document.createElement('span');
                    errorSpan.className = 'distance-validation-message text-danger';
                    distanceInput.parentNode.appendChild(errorSpan);
                }
                errorSpan.textContent = message;
            }

            function clearValidationMessage() {
                var errorSpan = document.querySelector('.distance-validation-message');
                if (errorSpan) {
                    errorSpan.textContent = '';
                }
            }
        });
    </script>
}

<style>
    .border-danger {
        border: 2px solid red !important;
    }

    .text-danger {
        color: red !important;
    }

    fieldset[disabled] .form-control,
    fieldset[disabled] .btn {
        background-color: #e9ecef;
        cursor: not-allowed;
    }

        fieldset[disabled] .form-control:disabled,
        fieldset[disabled] .btn:disabled {
            opacity: 1;
        }
</style>
